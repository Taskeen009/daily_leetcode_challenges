
1829. Maximum XOR for Each Query

#include <vector>
using namespace std;

class Solution {
public:
    vector<int> getMaximumXor(vector<int>& nums, int maximumBit) {
        int n = nums.size();
        int allOnes = (1 << maximumBit) - 1;  // Mask with all bits set up to maximumBit
        int x = 0;

        // Compute the initial XOR of all elements in nums
        for (int num : nums) {
            x ^= num;
        }

        vector<int> answer(n);
        
        // Process each query in reverse order
        for (int i = 0; i < n; ++i) {
            // Compute k for the current x
            answer[i] = x ^ allOnes;
            
            // Update x by removing the last element's contribution
            x ^= nums.back();
            nums.pop_back();  // Remove the last element
        }
        
        return answer;
    }
};
